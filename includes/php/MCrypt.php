<?phpclass MCrypt{    private $iv = 'fedcba9876543210'; #Same as in JAVA    private $key = '0123456789abcdef'; #Same as in JAVA    private $method = 'AES-256-CBC';    function __construct()    {    }    /**     * @param string $str     * @param bool $isBinary whether to encrypt as binary or not. Default is: false     * @return string Encrypted data     */    function encrypt($str, $isBinary = false)    {        $key = hash('sha256', $this->key);        $iv = substr(hash('sha256', $this->iv), 0, 16);                $output = openssl_encrypt($str, $this->method, $key, 0, $iv);        //die(base64_encode($output));        return base64_encode($output);                        /*$str = $isBinary ? $str : utf8_decode($str);        $td = mcrypt_module_open('rijndael-128', ' ', 'cbc', $iv);        mcrypt_generic_init($td, $this->key, $iv);        $encrypted = mcrypt_generic($td, $str);        mcrypt_generic_deinit($td);        mcrypt_module_close($td);        return $isBinary ? $encrypted : bin2hex($encrypted);*/    }    /**     * @param string $code     * @param bool $isBinary whether to decrypt as binary or not. Default is: false     * @return string Decrypted data     */    function decrypt($code, $isBinary = false)    {                $key = hash('sha256', $this->key);        $iv = substr(hash('sha256', $this->iv), 0, 16);                $output = openssl_decrypt(base64_decode($code), $this->method, $key, 0, $iv);                return $output;                /*$code = $isBinary ? $code : $this->hex2bin($code);        $iv = $this->iv;        $td = mcrypt_module_open('rijndael-128', ' ', 'cbc', $iv);        mcrypt_generic_init($td, $this->key, $iv);        $decrypted = mdecrypt_generic($td, $code);        mcrypt_generic_deinit($td);        mcrypt_module_close($td);        return $isBinary ? trim($decrypted) : utf8_encode(trim($decrypted));*/    }    protected function hex2bin($hexdata)    {        $bindata = '';        for ($i = 0; $i < strlen($hexdata); $i += 2) {            $bindata .= chr(hexdec(substr($hexdata, $i, 2)));        }        return $bindata;    }}